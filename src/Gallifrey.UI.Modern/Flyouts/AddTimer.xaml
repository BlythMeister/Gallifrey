<controls:Flyout x:Class="Gallifrey.UI.Modern.Flyouts.AddTimer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             IsModal="True" Theme="Adapt" Position="Right" Header="Add Timer" CloseButtonIsCancel="True">
    <Grid Width="340" Margin="5,5,5,5" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Padding="2">Temp Timer?</TextBlock>
        <CheckBox Grid.Row="0" Grid.Column="1" Margin="0,5" IsChecked="{Binding TempTimer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <CheckBox.Style>
                <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding JiraReferenceEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>

        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TempTimer}" Value="True" >
                            <Setter Property="Text" Value="Description"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TempTimer}" Value="False" >
                            <Setter Property="Text" Value="Jira Reference"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBox Grid.Row="1" Grid.Column="1" Margin="0,5" Text="{Binding JiraReference, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CharacterCasing="Upper">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding JiraReferenceEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TempTimer}" Value="True" >
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TextBox Grid.Row="1" Grid.Column="1" Margin="0,5" Text="{Binding TempTimerDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TempTimer}" Value="False" >
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Padding="2">Starting Date</TextBlock>
        <DatePicker Grid.Row="2" Grid.Column="1" Margin="0,5" IsTodayHighlighted="False" DisplayDate="{Binding DisplayDate}" DisplayDateStart="{Binding MinDate}" DisplayDateEnd="{Binding MaxDate}" SelectedDate="{Binding StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedDateChanged="StartDateChanged">
            <DatePicker.Style>
                <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DateEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DatePicker.Style>
        </DatePicker>

        <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Padding="2">Pre Loaded Time</TextBlock>
        <WrapPanel Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="0,5" Orientation="Horizontal">
            <WrapPanel.Style>
                <Style TargetType="WrapPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TimeEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </WrapPanel.Style>
            <controls:NumericUpDown Value="{Binding StartHours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" Minimum="0" Maximum="9" Width="80"/>
            <TextBlock VerticalAlignment="Center" Margin="2,0">Hours</TextBlock>
            <controls:NumericUpDown Value="{Binding StartMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" Minimum="0" Maximum="59" Width="80"/>
            <TextBlock VerticalAlignment="Center" Margin="2,0">Minutes</TextBlock>
        </WrapPanel>

        <TextBlock Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Padding="2">Start Now?</TextBlock>
        <CheckBox Grid.Row="4" Grid.Column="1" Margin="0,5" IsChecked="{Binding StartNow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
            <CheckBox.Style>
                <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StartNowEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>

        <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Padding="2">Assign To Me?</TextBlock>
        <CheckBox Grid.Row="5" Grid.Column="1" Margin="0,5" IsChecked="{Binding AssignToMe, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <CheckBox.Style>
                <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TempTimer}" Value="True" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>

        <TextBlock Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Padding="2">Set In Progress?</TextBlock>
        <CheckBox Grid.Row="6" Grid.Column="1" Margin="0,5" IsChecked="{Binding InProgress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <CheckBox.Style>
                <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TempTimer}" Value="True" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>

        <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center">
            <Button  Style="{DynamicResource MetroCircleButtonStyle}" Width="50" Height="50" Margin="2,0" Click="AddButton" IsDefault="True">
                <Rectangle Width="23" Height="23" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" ToolTip="Add Timer">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Style="{DynamicResource MetroCircleButtonStyle}" Width="50" Height="50" Margin="2,0" Click="SearchButton">
                <Rectangle Width="23" Height="23" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" ToolTip="Search Jira">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_magnify}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </StackPanel>
    </Grid>
</controls:Flyout>
