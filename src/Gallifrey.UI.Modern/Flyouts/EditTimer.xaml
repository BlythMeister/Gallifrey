<controls:Flyout x:Class="Gallifrey.UI.Modern.Flyouts.EditTimer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
             IsModal="True" Theme="Adapt" Position="Right" Header="Edit Timer" CloseButtonIsCancel="True">
    <Grid Width="340" Margin="5,5,5,5" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">Jira Reference</TextBlock>
        <TextBox Grid.Row="0" Grid.Column="1" Margin="0,5" Text="{Binding JiraReference, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CharacterCasing="Upper">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding JiraReferenceEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Padding="2">Date</TextBlock>
        <DatePicker Grid.Row="1" Grid.Column="1" Margin="0,5" IsTodayHighlighted="False" DisplayDate="{Binding DisplayDate}" DisplayDateStart="{Binding MinDate}" DisplayDateEnd="{Binding MaxDate}" SelectedDate="{Binding RunDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <DatePicker.Style>
                <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DateEditable}" Value="False" >
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DatePicker.Style>
        </DatePicker>

        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Padding="2">Current Time</TextBlock>
        <WrapPanel Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="0,5" Orientation="Horizontal">
            <controls:NumericUpDown Value="{Binding Hours, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" Minimum="0" Maximum="9" Width="80">
                <controls:NumericUpDown.Style>
                    <Style TargetType="controls:NumericUpDown" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TimeEditable}" Value="False" >
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:NumericUpDown.Style>
            </controls:NumericUpDown>
            <TextBlock VerticalAlignment="Center" Margin="2,0">Hours</TextBlock>
            <controls:NumericUpDown Value="{Binding Minutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" Minimum="0" Maximum="59" Width="80">
                <controls:NumericUpDown.Style>
                    <Style TargetType="controls:NumericUpDown" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TimeEditable}" Value="False" >
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:NumericUpDown.Style>
            </controls:NumericUpDown>
            <TextBlock VerticalAlignment="Center" Margin="2,0">Minutes</TextBlock>
        </WrapPanel>


        <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center">
            <Button  Style="{DynamicResource MetroCircleButtonStyle}" Width="50" Height="50" Margin="2,0" Click="AddTime">
                <Rectangle Width="27" Height="24" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" ToolTip="Add X Minutes">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_timer_rewind}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button  Style="{DynamicResource MetroCircleButtonStyle}" Width="50" Height="50" Margin="2,0" Click="SubtractTime">
                <Rectangle Width="27" Height="24" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" ToolTip="Subtract X Minutes">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_timer_forward}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button  Style="{DynamicResource MetroCircleButtonStyle}" Width="50" Height="50" Margin="2,0" Click="SaveButton" IsDefault="{Binding IsDefaultOnButton, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Rectangle Width="23" Height="23" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" ToolTip="Save Timer Changes">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_save}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </StackPanel>
    </Grid>
</controls:Flyout>
